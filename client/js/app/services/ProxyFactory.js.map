{"version":3,"sources":["../../app-es6/services/ProxyFactory.js"],"names":["ProxyFactory","obj","props","action","Proxy","get","target","prop","receiver","includes","_isFunction","console","log","result","Reflect","apply","arguments","set","value","func","Function"],"mappings":";;;;;;;;AAAA;;;;;;;;;;IAUMA,Y;;;;;;;;AACF;;;;;+BAKcC,G,EAAKC,K,EAAOC,M,EAAO;AAC7B,mBAAO,IAAIC,KAAJ,CAAUH,GAAV,EAAe;AAClBI,mBADkB,eACdC,MADc,EACNC,IADM,EACAC,QADA,EACU;AACxB;;;AAGA,wBAAGN,MAAMO,QAAN,CAAeF,IAAf,KAAwBP,aAAaU,WAAb,CAAyBJ,OAAOC,IAAP,CAAzB,CAA3B,EAAkE;AAC9D,+BAAO,YAAU;AACbI,oCAAQC,GAAR,MAAeL,IAAf;AACA,gCAAIM,SAASC,QAAQC,KAAR,CAAcT,OAAOC,IAAP,CAAd,EAA4BD,MAA5B,EAAoCU,SAApC,CAAb;AACAb,mCAAOG,MAAP;AACA,mCAAOO,MAAP;AACH,yBALD;AAMH;AACD,2BAAOC,QAAQT,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,CAAP;AACH,iBAdiB;AAgBlBS,mBAhBkB,eAgBdX,MAhBc,EAgBNC,IAhBM,EAgBAW,KAhBA,EAgBOV,QAhBP,EAgBiB;AAC/B,wBAAIK,SAASC,QAAQG,GAAR,CAAYX,MAAZ,EAAoBC,IAApB,EAA0BW,KAA1B,EAAiCV,QAAjC,CAAb;AACA,wBAAGN,MAAMO,QAAN,CAAeF,IAAf,CAAH,EAAwB;AACpBD,+BAAOC,IAAP,IAAeW,KAAf;AACAf,+BAAOG,MAAP;AACH;AACD,2BAAOO,MAAP;AACH;AAvBiB,aAAf,CAAP;AAyBH;;;oCAEkBM,I,EAAK;AACpB,mBAAO,QAAOA,IAAP,yCAAOA,IAAP,cAAuBC,QAAvB,yCAAuBA,QAAvB,EAAP;AACH","file":"ProxyFactory.js","sourcesContent":["/*\r\n    Prop: Propriedade chamada\r\n    Target: Objeto Original\r\n    Receiver: Referencia ao proxy\r\n    Executado quando acontecer alguma leitura de propriedade\r\n    get: function(target, prop, receiver) {\r\n        console.log(`prop: \"${prop}\"`);\r\n            return Reflect.get(target, prop, receiver); \r\n    }\r\n*/\r\nclass ProxyFactory{\r\n    /*\r\n        Obj = Objeto que será criado a proxy\r\n        props = array de propriedades\r\n        action = acao que será executada\r\n    */\r\n    static create(obj, props, action){\r\n        return new Proxy(obj, {\r\n            get(target, prop, receiver) {\r\n                /*\r\n                    Caso a propriedade exista dentro da lista de propriedades passada por parametro e seja uma funçao\r\n                */\r\n                if(props.includes(prop) && ProxyFactory._isFunction(target[prop])){\r\n                    return function(){\r\n                        console.log(`${prop}`);\r\n                        let result = Reflect.apply(target[prop], target, arguments);\r\n                        action(target);\r\n                        return result;\r\n                    }\r\n                }\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n\r\n            set(target, prop, value, receiver) {\r\n                let result = Reflect.set(target, prop, value, receiver);\r\n                if(props.includes(prop)){\r\n                    target[prop] = value;\r\n                    action(target);\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n\r\n    static _isFunction(func){\r\n        return typeof(func) == typeof(Function);\r\n    }\r\n}"]}